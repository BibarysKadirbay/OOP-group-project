package controllers;

import Repository.AttendanceRepository;
import Repository.interfaces.IAttendanceRepository;
import controllers.interfaces.IAttendanceController;
import models.Attendance;

import java.time.LocalDate;
import java.util.List;

public class AttendanceController implements IAttendanceController {
    private IAttendanceRepository attendanceRepository = new AttendanceRepository();

    // Implementing markAttendance method
    @Override
    public void markAttendance(int studentId, int courseId, LocalDate date, boolean status) {
        Attendance attendance = new Attendance(0, studentId, courseId, date, status);  // attendanceId will be auto-generated by DB
        boolean success = attendanceRepository.insertAttendance(attendance);
        if (success) {
            System.out.println("Attendance marked successfully.");
        } else {
            System.out.println("Failed to mark attendance.");
        }
    }

    // Implementing viewAttendanceByStudent method
    @Override
    public List<Attendance> viewAttendanceByStudent(int studentId) {
        List<Attendance> attendanceList = attendanceRepository.getAttendanceByStudentId(studentId);
        if (attendanceList.isEmpty()) {
            System.out.println("No attendance records found for this student.");
        } else {
            attendanceList.forEach(System.out::println);
        }
        return attendanceList;
    }

    // Implementing viewAttendanceByCourse method
    @Override
    public List<Attendance> viewAttendanceByCourse(int courseId) {
        List<Attendance> attendanceList = attendanceRepository.getAttendanceByCourseId(courseId);
        if (attendanceList.isEmpty()) {
            System.out.println("No attendance records found for this course.");
        } else {
            attendanceList.forEach(System.out::println);
        }
        return attendanceList;
    }
}

